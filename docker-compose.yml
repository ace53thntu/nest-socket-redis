# Set the version of docker compose to use
version: "3.9"

# The containers that compose the project
services:
  app3000:
    container_name: nest-socket-redis-be
    build:
      context: .
      args:
        ENVIRONMENT_NAME: ${ENVIRONMENT_NAME}
        HTTP_PORT: 3000
    restart: always
    ports:
      - 3000:3000
    networks:
      - socket-network

  app3001:
    container_name: nest-socket-redis-be-1
    build:
      context: .
      args:
        ENVIRONMENT_NAME: ${ENVIRONMENT_NAME}
        HTTP_PORT: 3000
    restart: always
    ports:
      - 3001:3000
    networks:
      - socket-network

  app3002:
    container_name: nest-socket-redis-be-2
    build:
      context: .
      args:
        ENVIRONMENT_NAME: ${ENVIRONMENT_NAME}
        HTTP_PORT: 3000
    restart: always
    ports:
      - 3002:3000
    networks:
      - socket-network

  app3003:
    container_name: nest-socket-redis-be-2
    build:
      context: .
      args:
        ENVIRONMENT_NAME: ${ENVIRONMENT_NAME}
        HTTP_PORT: 3000
    restart: always
    ports:
      - 3003:3000
    networks:
      - socket-network

  redis:
    image: redis:7.2.1-alpine
    container_name: redis
    restart: unless-stopped
    command: redis-server
    volumes:
      - redis-data:/data
      - ./conf/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - socket-network
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # postgres:
  #   image: postgres:14.7
  #   # restart: always
  #   container_name: postgres
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     POSTGRES_DB: ${DB_DATABASE}
  #     POSTGRES_USER: ${DB_USERNAME}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     TZ: "GMT"
  #     PGTZ: "GMT"
  #   volumes:
  #     - odidi-db-data:/data/postgres
  #   env_file:
  #     - .env

networks:
  socket-network:
    driver: bridge
    name: socket-network
volumes:
  redis-data: